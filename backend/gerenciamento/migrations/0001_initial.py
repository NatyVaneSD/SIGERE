# Generated by Django 5.2.6 on 2025-09-15 16:43

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Perito',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, unique=True, verbose_name='Nome do Perito')),
            ],
            options={
                'verbose_name': 'Perito',
                'verbose_name_plural': 'Peritos',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Requisicao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_documento', models.CharField(choices=[('FLAG', 'FLAG'), ('IPL', 'IPL'), ('BOP', 'BOP'), ('OF', 'OF'), ('TCO', 'TCO'), ('MEMO', 'MEMO')], max_length=4, verbose_name='Tipo de Documento')),
                ('numero_caso', models.CharField(max_length=9, unique=True, verbose_name='Número do Caso')),
                ('data_requisicao', models.DateField(verbose_name='Data da Requisição')),
                ('data_recebimento', models.DateField(verbose_name='Data de Recebimento')),
                ('objetivo_pericia', models.TextField(verbose_name='Objetivo da Perícia')),
                ('status_requisicao', models.CharField(choices=[('ESPERA', 'Em Espera'), ('PROCESSAMENTO', 'Em Processamento'), ('ENTREGUE', 'Entregue'), ('TRANSFERIDO', 'Transferido'), ('DEVOLVIDO', 'Devolvido'), ('CANCELADO', 'Cancelado')], max_length=20, verbose_name='Status da Requisição')),
                ('peso_requisicao', models.CharField(choices=[('P1', 'PESO 01'), ('P2', 'PESO 02'), ('P3', 'PESO 03'), ('P4', 'PESO 04')], max_length=2, verbose_name='Peso da Requisição')),
                ('pae_requisicao', models.CharField(blank=True, max_length=25, null=True, verbose_name='PAE da Requisição')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
            ],
            options={
                'verbose_name': 'Requisição',
                'verbose_name_plural': 'Requisições',
                'ordering': ['-data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='Solicitante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_solicitante', models.CharField(max_length=255, verbose_name='Nome do Solicitante')),
            ],
            options={
                'verbose_name': 'Solicitante',
                'verbose_name_plural': 'Solicitantes',
                'ordering': ['nome_solicitante'],
            },
        ),
        migrations.CreateModel(
            name='TipoEquipamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('SMARTPHONE', 'SMARTPHONE'), ('NOTEBOOK', 'NOTEBOOK'), ('PENDRIVE', 'PENDRIVE'), ('HD', 'HD'), ('SSD', 'SSD'), ('CPU', 'CPU'), ('CARTAO_MICROSD', 'CARTÃO MICROSD'), ('OUTROS', 'Outros')], max_length=50, verbose_name='Tipo de Equipamento')),
                ('outros_tipo', models.CharField(blank=True, max_length=50, null=True, verbose_name='Outro Tipo (se necessário)')),
            ],
            options={
                'verbose_name': 'Tipo de Equipamento',
                'verbose_name_plural': 'Tipos de Equipamento',
                'ordering': ['tipo'],
            },
        ),
        migrations.CreateModel(
            name='TipoExame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_exame', models.CharField(max_length=225, unique=True, verbose_name='Tipo de Exame')),
            ],
            options={
                'verbose_name': 'Tipo de Exame',
                'verbose_name_plural': 'Tipos de Exame',
                'ordering': ['nome_exame'],
            },
        ),
        migrations.CreateModel(
            name='UnidadeSolicitante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_UnidadeSolicitante', models.CharField(max_length=255, verbose_name='Nome da Unidade Solicitante')),
            ],
            options={
                'verbose_name': 'Unidade Solicitante',
                'verbose_name_plural': 'Unidades Solicitantes',
                'ordering': ['nome_UnidadeSolicitante'],
            },
        ),
        migrations.CreateModel(
            name='Armazenamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deposito', models.CharField(choices=[('D1', 'Deposito 01'), ('D2', 'Deposito 02'), ('D3', 'Deposito 03')], max_length=50, verbose_name='Depósito')),
                ('prateleira', models.CharField(max_length=50, verbose_name='Prateleira')),
            ],
            options={
                'verbose_name': 'Armazenamento',
                'verbose_name_plural': 'Armazenamentos',
                'ordering': ['deposito', 'prateleira'],
                'unique_together': {('deposito', 'prateleira')},
            },
        ),
        migrations.CreateModel(
            name='Protocolo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_protocolo', models.CharField(max_length=50, unique=True, verbose_name='Número do Protocolo')),
                ('data_entrega_perito', models.DateField(verbose_name='Data de Entrega ao Perito')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('perito', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='gerenciamento.perito', verbose_name='Perito')),
                ('requisicao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gerenciamento.requisicao', verbose_name='Requisição')),
            ],
            options={
                'verbose_name': 'Protocolo',
                'verbose_name_plural': 'Protocolos',
                'ordering': ['-data_criacao'],
            },
        ),
        migrations.AddField(
            model_name='requisicao',
            name='solicitante',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='gerenciamento.solicitante', verbose_name='Solicitante'),
        ),
        migrations.CreateModel(
            name='Equipamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quant_equipamente', models.PositiveSmallIntegerField(verbose_name='Quantidade de Equipamentos')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('local_armazenamento', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='gerenciamento.armazenamento', verbose_name='Local de Armazenamento')),
                ('protocolo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gerenciamento.protocolo', verbose_name='Protocolo')),
                ('tipo_equipamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gerenciamento.tipoequipamento', verbose_name='Tipo de Equipamento')),
            ],
            options={
                'verbose_name': 'Equipamento',
                'verbose_name_plural': 'Equipamentos',
                'ordering': ['-data_cadastro'],
            },
        ),
        migrations.AddField(
            model_name='requisicao',
            name='tipo_exame',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='gerenciamento.tipoexame', verbose_name='Tipo de Exame'),
        ),
        migrations.AddField(
            model_name='solicitante',
            name='unidade_solicitante',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gerenciamento.unidadesolicitante', verbose_name='Unidade Solicitante'),
        ),
        migrations.CreateModel(
            name='Auditoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tabela_afetada', models.CharField(max_length=255, verbose_name='Tabela Afetada')),
                ('id_registro', models.IntegerField(verbose_name='ID do Registro')),
                ('acao', models.CharField(choices=[('INSERT', 'Inserção'), ('UPDATE', 'Atualização'), ('DELETE', 'Exclusão')], max_length=10, verbose_name='Ação')),
                ('dados_antigos', models.JSONField(blank=True, null=True, verbose_name='Dados Antigos')),
                ('data_hora', models.DateTimeField(auto_now_add=True, verbose_name='Data e Hora')),
                ('usuario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Auditoria',
                'verbose_name_plural': 'Auditorias',
                'ordering': ['-data_hora'],
                'indexes': [models.Index(fields=['tabela_afetada', 'id_registro'], name='gerenciamen_tabela__06c9cf_idx'), models.Index(fields=['data_hora'], name='gerenciamen_data_ho_dc167e_idx')],
            },
        ),
        migrations.CreateModel(
            name='Laudo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_laudo', models.CharField(max_length=100, unique=True, verbose_name='Número do Laudo')),
                ('data_entrega_expedicao', models.DateField(verbose_name='Data de Entrega na Expedição')),
                ('data_entrega_custodia', models.DateField(verbose_name='Data de Entrega na Custódia')),
                ('anexo_digital', models.BooleanField(default=True, verbose_name='Anexo Digital')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('equipamentos', models.ManyToManyField(to='gerenciamento.equipamento', verbose_name='Equipamentos')),
                ('peritos', models.ManyToManyField(to='gerenciamento.perito', verbose_name='Peritos')),
                ('protocolo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='gerenciamento.protocolo', verbose_name='Protocolo')),
            ],
            options={
                'verbose_name': 'Laudo',
                'verbose_name_plural': 'Laudos',
                'ordering': ['-data_criacao'],
                'indexes': [models.Index(fields=['numero_laudo'], name='gerenciamen_numero__541177_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='protocolo',
            index=models.Index(fields=['numero_protocolo'], name='gerenciamen_numero__fd83bf_idx'),
        ),
        migrations.AddIndex(
            model_name='requisicao',
            index=models.Index(fields=['numero_caso'], name='gerenciamen_numero__9bbb91_idx'),
        ),
        migrations.AddIndex(
            model_name='requisicao',
            index=models.Index(fields=['status_requisicao'], name='gerenciamen_status__490819_idx'),
        ),
        migrations.AddIndex(
            model_name='requisicao',
            index=models.Index(fields=['data_recebimento'], name='gerenciamen_data_re_1ce264_idx'),
        ),
    ]
